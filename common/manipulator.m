%--------------------------------------------------------------------------
%
% manipulator.m
%
% S-Function that implements the manipulator dynamics.
%
% Author: Lorenzo Busellato, VR472249, 2022
%
%--------------------------------------------------------------------------
function [sys,x0,str,ts] = manipulator(t,x,u,flag,robot)
      switch flag,

      %%%%%%%%%%%%%%%%%%
      % Initialization %
      %%%%%%%%%%%%%%%%%%
      case 0,
        [sys,x0,str,ts]=mdlInitializeSizes(robot);

      %%%%%%%%%%%%%%%
      % Derivatives %
      %%%%%%%%%%%%%%%
      case 1,
        sys=mdlDerivatives(t,x,u,robot);

      %%%%%%%%%%%
      % Outputs %
      %%%%%%%%%%%
      case 3,
        sys=mdlOutputs(t,x,u);

      %%%%%%%%%%%%%%%%%%%
      % Unhandled flags %
      %%%%%%%%%%%%%%%%%%%
      case { 2, 4, 9 },
        sys = [];

      %%%%%%%%%%%%%%%%%%%%
      % Unexpected flags %
      %%%%%%%%%%%%%%%%%%%%
      otherwise
        DAStudio.error('Simulink:blocks:unhandledFlag', num2str(flag));

    end
    % end csfunc

    %
    %=============================================================================
    % mdlInitializeSizes
    % Return the sizes, initial conditions, and sample times for the S-function.
    %=============================================================================
    %
    function [sys,x0,str,ts]=mdlInitializeSizes(robot)

        sizes = simsizes;
        sizes.NumContStates  = 2*robot.dof; 
        sizes.NumDiscStates  = 0;
        sizes.NumOutputs     = 2*robot.dof;
        sizes.NumInputs      = robot.dof;
        sizes.DirFeedthrough = 0;
        sizes.NumSampleTimes = 1;

        sys = simsizes(sizes);    
        x0  = [robot.q0; robot.dq0];
        
        str = [];
        ts  = [0 0];
    end
    % end mdlInitializeSizes
    %
    %=============================================================================
    % mdlDerivatives
    % Return the derivatives for the continuous states.
    %=============================================================================
    %
    function sys=mdlDerivatives(t,x,u,robot)
        q = x(1:robot.dof);
        dq = x(robot.dof+1:2*robot.dof);
        tau1 = u(1); tau2 = u(2); tau3 = u(3); 
        q1 = q(1); q2 = q(2); q3 = q(3);
        dq1 = dq(1); dq2 = dq(2); dq3 = dq(3);
        ddq1 = ((tau3 - 0.9621*cos(q3) + 0.0237*dq1^2*dq3*sin(2.0*q3) - 0.03923*dq1*dq3^2*cos(q3) + 0.02942*dq1^2*dq3*sin(q3) + 0.09808*dq1^2*dq3*q2*sin(q3))*(1.101e+86*sin(2.0*q3) + 3.843e+84*sin(4.0*q3) + 1.548e+84*sin(5.0*q3) + 7.83e+85*sin(3.0*q3) - 1.465e+62*sin(6.0*q3) + 1.424e+61*sin(7.0*q3) + 9.404e+86*sin(q3) + 5.592e+87*q2^2*sin(q3) - 1.154e+69*q2^3*sin(q3) + 4.323e+68*q2^4*sin(q3) + 3.669e+86*q2*sin(2.0*q3) + 1.281e+85*q2*sin(4.0*q3) + 1.439e+63*q2*sin(5.0*q3) + 9.272e+85*q2*sin(3.0*q3) - 1.626e+62*q2*sin(6.0*q3) - 3.983e+67*q2^2*sin(2.0*q3) - 9.891e+64*q2^2*sin(4.0*q3) + 2.448e+67*q2^3*sin(2.0*q3) - 7.224e+64*q2^3*sin(4.0*q3) + 2.563e+87*q2*sin(q3) + 4.057e+63*q2^2*sin(5.0*q3) + 2.023e+86*q2^2*sin(3.0*q3) - 2.976e+65*q2^3*sin(3.0*q3) - 1.744e+64*q2^4*sin(3.0*q3)))/(2.977e+99*q2 + 1.875e+98*cos(2.0*q3) + 1.103e+97*cos(4.0*q3) + 2.538e+93*cos(8.0*q3) + 1.024e+96*cos(5.0*q3) + 2.795e+97*cos(3.0*q3) + 2.775e+95*cos(6.0*q3) + 1.26e+94*cos(7.0*q3) + 2.661e+98*cos(q3) + 3.662e+99*q2^2*cos(q3) + 4.829e+99*q2^3*cos(q3) + 7.477e+98*q2*cos(2.0*q3) + 3.058e+97*q2*cos(4.0*q3) + 4.167e+96*q2*cos(5.0*q3) + 1.372e+98*q2*cos(3.0*q3) + 4.083e+95*q2*cos(6.0*q3) + 4.201e+94*q2*cos(7.0*q3) + 2.103e+99*q2^2*cos(2.0*q3) + 7.264e+97*q2^2*cos(4.0*q3) + 2.276e+99*q2^3*cos(2.0*q3) + 3.974e+97*q2^3*cos(4.0*q3) + 2.484e+99*q2^4*cos(2.0*q3) + 4.336e+97*q2^4*cos(4.0*q3) + 1.551e+99*q2*cos(q3) + 4.164e+96*q2^2*cos(5.0*q3) + 5.491e+96*q2^3*cos(5.0*q3) + 2.427e+98*q2^2*cos(3.0*q3) + 8.373e+95*q2^2*cos(6.0*q3) + 3.2e+98*q2^3*cos(3.0*q3) + 1.019e+100*q2^2 + 1.634e+100*q2^3 + 1.783e+100*q2^4 + 5.718e+98) - (1.0*(0.3549*dq1^2*dq2 - 1.0*tau2 + 0.09808*dq1^2*dq2*cos(q3) + 1.549*dq1^2*dq2*q2)*(7.283e+64*q2 + 6.038e+63*cos(q3) + 2.187e+64*q2*cos(q3)^2 + 1.343e+33*q2^2*cos(q3) + 6.044e+63*q2*cos(q3)^3 + 1.645e+33*q2^3*cos(q3) + 1.642e+63*q2*cos(q3)^4 + 4.537e+62*q2*cos(q3)^5 + 1.251e+64*cos(q3)^2 + 1.813e+63*cos(q3)^3 + 2.035e+63*cos(q3)^4 + 1.361e+62*cos(q3)^5 + 1.096e+62*cos(q3)^6 + 4.773e+64*q2^2*cos(q3)^2 - 1.208e+33*q2^2*cos(q3)^3 - 5.071e+33*q2^3*cos(q3)^2 + 3.583e+63*q2^2*cos(q3)^4 - 1.502e+33*q2^3*cos(q3)^3 - 2.191e+33*q2^4*cos(q3)^2 + 2.013e+64*q2*cos(q3) + 1.589e+65*q2^2 + 5.09e+33*q2^3 + 2.165e+33*q2^4 + 2.547e+64))/(9.039e+64*q2 + 7.493e+63*cos(q3) + 5.033e+64*q2*cos(q3)^2 + 1.182e+65*q2^2*cos(q3) + 1.871e+64*q2*cos(q3)^3 + 1.559e+65*q2^3*cos(q3) + 9.0e+63*q2*cos(q3)^4 + 2.479e+63*q2*cos(q3)^5 + 5.227e+62*q2*cos(q3)^6 + 1.075e+62*q2*cos(q3)^7 + 1.167e+64*cos(q3)^2 + 3.681e+63*cos(q3)^3 + 3.012e+63*cos(q3)^4 + 5.986e+62*cos(q3)^5 + 3.292e+62*cos(q3)^6 + 3.226e+61*cos(q3)^7 + 1.299e+61*cos(q3)^8 + 1.456e+65*q2^2*cos(q3)^2 + 3.549e+64*q2^2*cos(q3)^3 + 1.694e+65*q2^3*cos(q3)^2 + 2.164e+64*q2^2*cos(q3)^4 + 4.681e+64*q2^3*cos(q3)^3 + 1.848e+65*q2^4*cos(q3)^2 + 2.665e+63*q2^2*cos(q3)^5 + 1.272e+64*q2^3*cos(q3)^4 + 1.072e+63*q2^2*cos(q3)^6 + 3.514e+63*q2^3*cos(q3)^5 + 1.388e+64*q2^4*cos(q3)^4 + 4.641e+64*q2*cos(q3) + 3.265e+65*q2^2 + 5.641e+65*q2^3 + 6.154e+65*q2^4 + 1.58e+64) + ((tau1 - 0.7099*dq1*dq2^2 - 0.03923*dq3^3*cos(q3) + 0.0474*dq1*dq3^2*sin(2.0*q3) - 0.1962*dq1*dq2^2*cos(q3) + 0.05885*dq1*dq3^2*sin(q3) - 3.098*dq1*dq2^2*q2 + 0.1962*dq1*dq3^2*q2*sin(q3))*(1.821e+37*q2 + 1.509e+36*cos(q3) + 5.468e+36*q2*cos(q3)^2 + 1.511e+36*q2*cos(q3)^3 + 4.105e+35*q2*cos(q3)^4 + 1.134e+35*q2*cos(q3)^5 + 3.128e+36*cos(q3)^2 + 4.533e+35*cos(q3)^3 + 5.087e+35*cos(q3)^4 + 3.403e+34*cos(q3)^5 + 2.741e+34*cos(q3)^6 + 1.193e+37*q2^2*cos(q3)^2 + 8.957e+35*q2^2*cos(q3)^4 + 5.031e+36*q2*cos(q3) + 3.973e+37*q2^2 + 6.366e+36))/(9.039e+36*q2 + 7.493e+35*cos(q3) + 5.033e+36*q2*cos(q3)^2 + 1.182e+37*q2^2*cos(q3) + 1.871e+36*q2*cos(q3)^3 + 1.559e+37*q2^3*cos(q3) + 9.0e+35*q2*cos(q3)^4 + 2.479e+35*q2*cos(q3)^5 + 5.227e+34*q2*cos(q3)^6 + 1.075e+34*q2*cos(q3)^7 + 1.167e+36*cos(q3)^2 + 3.681e+35*cos(q3)^3 + 3.012e+35*cos(q3)^4 + 5.986e+34*cos(q3)^5 + 3.292e+34*cos(q3)^6 + 3.226e+33*cos(q3)^7 + 1.299e+33*cos(q3)^8 + 1.456e+37*q2^2*cos(q3)^2 + 3.549e+36*q2^2*cos(q3)^3 + 1.694e+37*q2^3*cos(q3)^2 + 2.164e+36*q2^2*cos(q3)^4 + 4.681e+36*q2^3*cos(q3)^3 + 1.848e+37*q2^4*cos(q3)^2 + 2.665e+35*q2^2*cos(q3)^5 + 1.272e+36*q2^3*cos(q3)^4 + 1.072e+35*q2^2*cos(q3)^6 + 3.514e+35*q2^3*cos(q3)^5 + 1.388e+36*q2^4*cos(q3)^4 + 4.641e+36*q2*cos(q3) + 3.265e+37*q2^2 + 5.641e+37*q2^3 + 6.154e+37*q2^4 + 1.58e+36);
        ddq2 = ((tau1 - 0.7099*dq1*dq2^2 - 0.03923*dq3^3*cos(q3) + 0.0474*dq1*dq3^2*sin(2.0*q3) - 0.1962*dq1*dq2^2*cos(q3) + 0.05885*dq1*dq3^2*sin(q3) - 3.098*dq1*dq2^2*q2 + 0.1962*dq1*dq3^2*q2*sin(q3))*(7.283e+36*q2 + 6.038e+35*cos(q3) + 2.187e+36*q2*cos(q3)^2 + 6.044e+35*q2*cos(q3)^3 + 1.642e+35*q2*cos(q3)^4 + 4.537e+34*q2*cos(q3)^5 + 1.251e+36*cos(q3)^2 + 1.813e+35*cos(q3)^3 + 2.035e+35*cos(q3)^4 + 1.361e+34*cos(q3)^5 + 1.096e+34*cos(q3)^6 + 4.773e+36*q2^2*cos(q3)^2 + 3.583e+35*q2^2*cos(q3)^4 + 2.013e+36*q2*cos(q3) + 1.589e+37*q2^2 + 2.547e+36))/(9.039e+36*q2 + 7.493e+35*cos(q3) + 5.033e+36*q2*cos(q3)^2 + 1.182e+37*q2^2*cos(q3) + 1.871e+36*q2*cos(q3)^3 + 1.559e+37*q2^3*cos(q3) + 9.0e+35*q2*cos(q3)^4 + 2.479e+35*q2*cos(q3)^5 + 5.227e+34*q2*cos(q3)^6 + 1.075e+34*q2*cos(q3)^7 + 1.167e+36*cos(q3)^2 + 3.681e+35*cos(q3)^3 + 3.012e+35*cos(q3)^4 + 5.986e+34*cos(q3)^5 + 3.292e+34*cos(q3)^6 + 3.226e+33*cos(q3)^7 + 1.299e+33*cos(q3)^8 + 1.456e+37*q2^2*cos(q3)^2 + 3.549e+36*q2^2*cos(q3)^3 + 1.694e+37*q2^3*cos(q3)^2 + 2.164e+36*q2^2*cos(q3)^4 + 4.681e+36*q2^3*cos(q3)^3 + 1.848e+37*q2^4*cos(q3)^2 + 2.665e+35*q2^2*cos(q3)^5 + 1.272e+36*q2^3*cos(q3)^4 + 1.072e+35*q2^2*cos(q3)^6 + 3.514e+35*q2^3*cos(q3)^5 + 1.388e+36*q2^4*cos(q3)^4 + 4.641e+36*q2*cos(q3) + 3.265e+37*q2^2 + 5.641e+37*q2^3 + 6.154e+37*q2^4 + 1.58e+36) + ((tau3 - 0.9621*cos(q3) + 0.0237*dq1^2*dq3*sin(2.0*q3) - 0.03923*dq1*dq3^2*cos(q3) + 0.02942*dq1^2*dq3*sin(q3) + 0.09808*dq1^2*dq3*q2*sin(q3))*(1.691e+98*sin(2.0*q3) + 1.326e+97*sin(4.0*q3) + 4.124e+96*sin(5.0*q3) + 1.01e+98*sin(3.0*q3) + 2.57e+95*sin(6.0*q3) + 5.175e+94*sin(7.0*q3) + 7.017e+98*sin(q3) + 1.345e+100*q2^2*sin(q3) + 2.24e+100*q2^3*sin(q3) + 2.444e+100*q2^4*sin(q3) + 1.005e+99*q2*sin(2.0*q3) + 5.958e+97*q2*sin(4.0*q3) + 8.327e+96*q2*sin(5.0*q3) + 3.767e+98*q2*sin(3.0*q3) + 8.566e+95*q2*sin(6.0*q3) + 2.432e+99*q2^2*sin(2.0*q3) + 8.49e+97*q2^2*sin(4.0*q3) + 3.207e+99*q2^3*sin(2.0*q3) + 1.12e+98*q2^3*sin(4.0*q3) + 3.828e+99*q2*sin(q3) + 1.707e+97*q2^2*sin(5.0*q3) + 9.751e+98*q2^2*sin(3.0*q3) + 8.104e+98*q2^3*sin(3.0*q3) + 8.842e+98*q2^4*sin(3.0*q3)))/(2.977e+99*q2 + 1.875e+98*cos(2.0*q3) + 1.103e+97*cos(4.0*q3) + 2.538e+93*cos(8.0*q3) + 1.024e+96*cos(5.0*q3) + 2.795e+97*cos(3.0*q3) + 2.775e+95*cos(6.0*q3) + 1.26e+94*cos(7.0*q3) + 2.661e+98*cos(q3) + 3.662e+99*q2^2*cos(q3) + 4.829e+99*q2^3*cos(q3) + 7.477e+98*q2*cos(2.0*q3) + 3.058e+97*q2*cos(4.0*q3) + 4.167e+96*q2*cos(5.0*q3) + 1.372e+98*q2*cos(3.0*q3) + 4.083e+95*q2*cos(6.0*q3) + 4.201e+94*q2*cos(7.0*q3) + 2.103e+99*q2^2*cos(2.0*q3) + 7.264e+97*q2^2*cos(4.0*q3) + 2.276e+99*q2^3*cos(2.0*q3) + 3.974e+97*q2^3*cos(4.0*q3) + 2.484e+99*q2^4*cos(2.0*q3) + 4.336e+97*q2^4*cos(4.0*q3) + 1.551e+99*q2*cos(q3) + 4.164e+96*q2^2*cos(5.0*q3) + 5.491e+96*q2^3*cos(5.0*q3) + 2.427e+98*q2^2*cos(3.0*q3) + 8.373e+95*q2^2*cos(6.0*q3) + 3.2e+98*q2^3*cos(3.0*q3) + 1.019e+100*q2^2 + 1.634e+100*q2^3 + 1.783e+100*q2^4 + 5.718e+98) - (1.0*(0.3549*dq1^2*dq2 - 1.0*tau2 + 0.09808*dq1^2*dq2*cos(q3) + 1.549*dq1^2*dq2*q2)*(9.625e+36*q2 + 7.978e+35*cos(q3) + 3.604e+36*q2*cos(q3)^2 + 8.776e+36*q2^2*cos(q3) + 1.113e+36*q2*cos(q3)^3 + 1.157e+37*q2^3*cos(q3) + 3.242e+35*q2*cos(q3)^4 + 7.133e+34*q2*cos(q3)^5 + 1.191e+36*cos(q3)^2 + 2.623e+35*cos(q3)^3 + 2.014e+35*cos(q3)^4 + 2.14e+34*cos(q3)^5 + 1.081e+34*cos(q3)^6 + 9.079e+36*q2^2*cos(q3)^2 + 1.318e+36*q2^2*cos(q3)^3 + 6.289e+36*q2^3*cos(q3)^2 + 6.733e+35*q2^2*cos(q3)^4 + 1.738e+36*q2^3*cos(q3)^3 + 6.861e+36*q2^4*cos(q3)^2 + 4.251e+36*q2*cos(q3) + 3.06e+37*q2^2 + 4.189e+37*q2^3 + 4.57e+37*q2^4 + 2.192e+36))/(9.039e+36*q2 + 7.493e+35*cos(q3) + 5.033e+36*q2*cos(q3)^2 + 1.182e+37*q2^2*cos(q3) + 1.871e+36*q2*cos(q3)^3 + 1.559e+37*q2^3*cos(q3) + 9.0e+35*q2*cos(q3)^4 + 2.479e+35*q2*cos(q3)^5 + 5.227e+34*q2*cos(q3)^6 + 1.075e+34*q2*cos(q3)^7 + 1.167e+36*cos(q3)^2 + 3.681e+35*cos(q3)^3 + 3.012e+35*cos(q3)^4 + 5.986e+34*cos(q3)^5 + 3.292e+34*cos(q3)^6 + 3.226e+33*cos(q3)^7 + 1.299e+33*cos(q3)^8 + 1.456e+37*q2^2*cos(q3)^2 + 3.549e+36*q2^2*cos(q3)^3 + 1.694e+37*q2^3*cos(q3)^2 + 2.164e+36*q2^2*cos(q3)^4 + 4.681e+36*q2^3*cos(q3)^3 + 1.848e+37*q2^4*cos(q3)^2 + 2.665e+35*q2^2*cos(q3)^5 + 1.272e+36*q2^3*cos(q3)^4 + 1.072e+35*q2^2*cos(q3)^6 + 3.514e+35*q2^3*cos(q3)^5 + 1.388e+36*q2^4*cos(q3)^4 + 4.641e+36*q2*cos(q3) + 3.265e+37*q2^2 + 5.641e+37*q2^3 + 6.154e+37*q2^4 + 1.58e+36);
        ddq3 = ((tau1 - 0.7099*dq1*dq2^2 - 0.03923*dq3^3*cos(q3) + 0.0474*dq1*dq3^2*sin(2.0*q3) - 0.1962*dq1*dq2^2*cos(q3) + 0.05885*dq1*dq3^2*sin(q3) - 3.098*dq1*dq2^2*q2 + 0.1962*dq1*dq3^2*q2*sin(q3))*(8.805e+54*sin(2.0*q3) + 3.074e+53*sin(4.0*q3) + 1.238e+53*sin(5.0*q3) + 6.264e+54*sin(3.0*q3) + 7.523e+55*sin(q3) + 4.474e+56*q2^2*sin(q3) + 2.935e+55*q2*sin(2.0*q3) + 1.025e+54*q2*sin(4.0*q3) + 7.417e+54*q2*sin(3.0*q3) + 2.05e+56*q2*sin(q3) + 1.619e+55*q2^2*sin(3.0*q3)))/(1.808e+68*q2 + 1.499e+67*cos(q3) + 1.007e+68*q2*cos(q3)^2 + 2.364e+68*q2^2*cos(q3) + 3.741e+67*q2*cos(q3)^3 + 3.117e+68*q2^3*cos(q3) + 1.8e+67*q2*cos(q3)^4 + 4.957e+66*q2*cos(q3)^5 + 1.045e+66*q2*cos(q3)^6 + 2.151e+65*q2*cos(q3)^7 + 2.334e+67*cos(q3)^2 + 7.362e+66*cos(q3)^3 + 6.024e+66*cos(q3)^4 + 1.197e+66*cos(q3)^5 + 6.584e+65*cos(q3)^6 + 6.452e+64*cos(q3)^7 + 2.599e+64*cos(q3)^8 + 2.912e+68*q2^2*cos(q3)^2 + 7.099e+67*q2^2*cos(q3)^3 + 3.388e+68*q2^3*cos(q3)^2 + 4.327e+67*q2^2*cos(q3)^4 + 9.361e+67*q2^3*cos(q3)^3 + 3.696e+68*q2^4*cos(q3)^2 + 5.329e+66*q2^2*cos(q3)^5 + 2.544e+67*q2^3*cos(q3)^4 + 2.143e+66*q2^2*cos(q3)^6 + 7.028e+66*q2^3*cos(q3)^5 + 2.775e+67*q2^4*cos(q3)^4 + 9.281e+67*q2*cos(q3) + 6.53e+68*q2^2 + 1.128e+69*q2^3 + 1.231e+69*q2^4 + 3.16e+67) - (1.0*(0.3549*dq1^2*dq2 - 1.0*tau2 + 0.09808*dq1^2*dq2*cos(q3) + 1.549*dq1^2*dq2*q2)*(6.765e+67*sin(2.0*q3) + 5.303e+66*sin(4.0*q3) + 1.65e+66*sin(5.0*q3) + 4.041e+67*sin(3.0*q3) + 1.028e+65*sin(6.0*q3) + 2.07e+64*sin(7.0*q3) + 2.807e+68*sin(q3) + 5.382e+69*q2^2*sin(q3) + 8.96e+69*q2^3*sin(q3) + 9.776e+69*q2^4*sin(q3) + 4.019e+68*q2*sin(2.0*q3) + 2.383e+67*q2*sin(4.0*q3) + 3.331e+66*q2*sin(5.0*q3) + 1.507e+68*q2*sin(3.0*q3) + 3.426e+65*q2*sin(6.0*q3) + 9.727e+68*q2^2*sin(2.0*q3) + 3.396e+67*q2^2*sin(4.0*q3) + 1.283e+69*q2^3*sin(2.0*q3) + 4.479e+67*q2^3*sin(4.0*q3) + 1.531e+69*q2*sin(q3) + 6.83e+66*q2^2*sin(5.0*q3) + 3.901e+68*q2^2*sin(3.0*q3) + 3.242e+68*q2^3*sin(3.0*q3) + 3.537e+68*q2^4*sin(3.0*q3)))/(1.191e+69*q2 + 7.5e+67*cos(2.0*q3) + 4.41e+66*cos(4.0*q3) + 1.015e+63*cos(8.0*q3) + 4.094e+65*cos(5.0*q3) + 1.118e+67*cos(3.0*q3) + 1.11e+65*cos(6.0*q3) + 5.041e+63*cos(7.0*q3) + 1.065e+68*cos(q3) + 1.465e+69*q2^2*cos(q3) + 1.932e+69*q2^3*cos(q3) + 2.991e+68*q2*cos(2.0*q3) + 1.223e+67*q2*cos(4.0*q3) + 1.667e+66*q2*cos(5.0*q3) + 5.486e+67*q2*cos(3.0*q3) + 1.633e+65*q2*cos(6.0*q3) + 1.68e+64*q2*cos(7.0*q3) + 8.411e+68*q2^2*cos(2.0*q3) + 2.905e+67*q2^2*cos(4.0*q3) + 9.106e+68*q2^3*cos(2.0*q3) + 1.59e+67*q2^3*cos(4.0*q3) + 9.935e+68*q2^4*cos(2.0*q3) + 1.734e+67*q2^4*cos(4.0*q3) + 6.204e+68*q2*cos(q3) + 1.665e+66*q2^2*cos(5.0*q3) + 2.196e+66*q2^3*cos(5.0*q3) + 9.706e+67*q2^2*cos(3.0*q3) + 3.349e+65*q2^2*cos(6.0*q3) + 1.28e+68*q2^3*cos(3.0*q3) + 4.077e+69*q2^2 + 6.536e+69*q2^3 + 7.131e+69*q2^4 + 2.287e+68) + ((tau3 - 0.9621*cos(q3) + 0.0237*dq1^2*dq3*sin(2.0*q3) - 0.03923*dq1*dq3^2*cos(q3) + 0.02942*dq1^2*dq3*sin(q3) + 0.09808*dq1^2*dq3*q2*sin(q3))*(5.464e+38*q2 + 4.529e+37*cos(q3) + 2.222e+38*q2*cos(q3)^2 + 7.145e+38*q2^2*cos(q3) + 7.095e+37*q2*cos(q3)^3 + 9.422e+38*q2^3*cos(q3) + 2.104e+37*q2*cos(q3)^4 + 4.329e+36*q2*cos(q3)^5 + 5.62e+37*cos(q3)^2 + 1.545e+37*cos(q3)^3 + 9.769e+36*cos(q3)^4 + 1.299e+36*cos(q3)^5 + 5.231e+35*cos(q3)^6 + 5.837e+38*q2^2*cos(q3)^2 + 1.073e+38*q2^2*cos(q3)^3 + 5.12e+38*q2^3*cos(q3)^2 + 4.315e+37*q2^2*cos(q3)^4 + 1.415e+38*q2^3*cos(q3)^3 + 5.586e+38*q2^4*cos(q3)^2 + 2.805e+38*q2*cos(q3) + 1.974e+39*q2^2 + 3.41e+39*q2^3 + 3.72e+39*q2^4 + 9.552e+37))/(2.26e+37*q2 + 1.873e+36*cos(q3) + 1.258e+37*q2*cos(q3)^2 + 2.955e+37*q2^2*cos(q3) + 4.676e+36*q2*cos(q3)^3 + 3.897e+37*q2^3*cos(q3) + 2.25e+36*q2*cos(q3)^4 + 6.197e+35*q2*cos(q3)^5 + 1.307e+35*q2*cos(q3)^6 + 2.688e+34*q2*cos(q3)^7 + 2.917e+36*cos(q3)^2 + 9.203e+35*cos(q3)^3 + 7.53e+35*cos(q3)^4 + 1.497e+35*cos(q3)^5 + 8.23e+34*cos(q3)^6 + 8.065e+33*cos(q3)^7 + 3.249e+33*cos(q3)^8 + 3.64e+37*q2^2*cos(q3)^2 + 8.873e+36*q2^2*cos(q3)^3 + 4.235e+37*q2^3*cos(q3)^2 + 5.409e+36*q2^2*cos(q3)^4 + 1.17e+37*q2^3*cos(q3)^3 + 4.62e+37*q2^4*cos(q3)^2 + 6.662e+35*q2^2*cos(q3)^5 + 3.179e+36*q2^3*cos(q3)^4 + 2.679e+35*q2^2*cos(q3)^6 + 8.785e+35*q2^3*cos(q3)^5 + 3.469e+36*q2^4*cos(q3)^4 + 1.16e+37*q2*cos(q3) + 8.162e+37*q2^2 + 1.41e+38*q2^3 + 1.539e+38*q2^4 + 3.95e+36);
        sys = [dq; ddq1; ddq2; ddq3];
    end
    % end mdlDerivatives
    %
    %=============================================================================
    % mdlOutputs
    % Return the block outputs.
    %=============================================================================
    %
    function sys=mdlOutputs(t,x,u)
        sys = x;
    end

    % end mdlOutputs
end